{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Loader","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","src_SeasonDisplay_0","src_Loader","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,uBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,iBACNC,SAAU,eAyBHE,EAbO,SAAAC,GAClB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAILK,EAEAZ,EAAaS,GAAhCP,EAFmBU,EAEnBV,KAAMC,EAFaS,EAEbT,SAEd,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAAC,OAAKd,EAAL,6BACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAAC,OAAKd,EAAL,gCC5BlBe,EAAS,SAAAZ,GACX,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBV,EAAMa,WAKvDD,EAAOE,aAAe,CAClBD,QAAS,cAGED,QCTTG,6MACFC,MAAQ,CAAEf,IAAK,KAAMgB,aAAc,uFAEf,IAAAC,EAAAC,KAChBC,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAAExB,IAAKuB,EAASE,OAAOC,YACjD,SAAAC,GAAK,OAAIV,EAAKO,SAAS,CAAER,aAAcW,EAAMf,oDAKjD,OAAIM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAAA,qBAAaU,KAAKH,MAAMC,eAG9BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAACoB,EAAD,CAAe5B,IAAKkB,KAAKH,MAAMf,MAGnCM,EAAAC,EAAAC,cAACqB,EAAD,CAAQjB,QAAQ,oEAIvB,OAAON,EAAAC,EAAAC,cAAA,WAAMU,KAAKY,wBAvBRC,IAAMC,WA2BxBC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.c650416e.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n    summer: {\n        text: \"Let's hit the beach!\",\n        iconName: 'sun'\n    },\n    winter: {\n        text: \"Brr, it's cold\",\n        iconName: 'snowflake'\n    }\n};\n\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n};\n\nconst SeasonDisplay = props => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    const { text, iconName } = seasonConfig[season];\n\n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`${iconName} icon massive icon-left`} />\n            <h1>{text}</h1>\n            <i className={`${iconName} icon massive icon-right`} />\n        </div>\n    );\n};\n\nexport default SeasonDisplay;\n","import React from 'react';\n\nconst Loader = props => {\n    return (\n        <div className=\"ui active inverted dimmer\">\n            <div className=\"ui big text loader\">{props.message}</div>\n        </div>\n    );\n};\n\nLoader.defaultProps = {\n    message: 'Loading...'\n};\n\nexport default Loader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Loader from './Loader';\n\nclass App extends React.Component {\n    state = { lat: null, errorMessage: '' };\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude }),\n            error => this.setState({ errorMessage: error.message })\n        );\n    }\n\n    renderContent() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n\n        if (!this.state.errorMessage && this.state.lat) {\n            return <SeasonDisplay lat={this.state.lat} />;\n        }\n\n        return <Loader message=\"Please accept location request\" />;\n    }\n\n    render() {\n        return <div>{this.renderContent()}</div>;\n    }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}